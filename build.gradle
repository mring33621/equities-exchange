plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'com.github.node-gradle.node' version '3.5.0'
}

group = 'com.mattring.trading'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly('com.h2database:h2')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2')
    developmentOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

node {
    download.set(true)
    version.set('18.12.1')
}

task npmRunBuild(type: NpmTask) {
    args = ['run', 'build']
    dependsOn npmInstall

    inputs.files(fileTree('node_modules'))
    inputs.files(fileTree('src/main/resources'))
    inputs.file('package.json')
    inputs.file('tailwind.config.js')
    inputs.file('webpack.config.js')
    outputs.dir("$buildDir/resources/main/static")
}

processResources {
    dependsOn npmRunBuild
}

tasks.named('test') {
    useJUnitPlatform()
}
